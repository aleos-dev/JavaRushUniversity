taskKey="ua.javarush.task.jdk13.task41.task4119"\n\nСтратегічний шопінг

За допомогою патерну Стратегія позбудься оператора switch у методі pay класу ShoppingCart.

1. У кореневій папці завдання створи пакет strategy, а в ньому &mdash; інтерфейс PaymentStrategy
з одним методом &ndash; void pay(int amount).
2. У пакеті strategy створи класи конкретних стратегій, що реалізують PaymentStrategy:
CashStrategy, CreditCardStrategy та PaypalStrategy. До їхніх методів pay помісти відповідний код з оператора switch.
- У CashStrategy має бути конструктор за замовчуванням.
- CreditCardStrategy має чотири приватні поля: String name, String cardNumber, int cvv, LocalDate expiryDate,
та конструктор з одним параметром типу Customer, який ініціалізує ці поля.
- PaypalStrategy має два приватні поля: String email, String password та конструктор з одним параметром
типу Customer, який ініціалізує ці поля.
3. У класі ShoppingCart створи приватне поле PaymentStrategy strategy, створи для нього геттер та сеттер.
Видали поля customer та type. Зміни конструктор ShoppingCart: залиши йому один параметр PaymentStrategy
та ініціалізуй у ньому поле strategy. У методі pay замість оператора switch переадресуй виклик полю strategy.
Перелік PaymentType можна видалити.
4. У методі main зміни створення об&#39;єктів ShoppingCart: передавай до конструктора об&#39;єкт необхідної стратегії.


Требования:
1.	Класи CreditCard, Customer, PaypalAccount та Item не повинні змінюватися.
2.	У пакеті strategy має існувати інтерфейс PaymentStrategy з методом void pay(int).
3.	У пакеті strategy має існувати клас CashStrategy, реалізований згідно з умовою завдання.
4.	У пакеті strategy має існувати клас CreditCardStrategy, реалізований згідно з умовою.
5.	У пакеті strategy має існувати клас PaypalStrategy, реалізований відповідно до умови.
6.	Клас ShoppingCart має бути змінено відповідно до умови.


